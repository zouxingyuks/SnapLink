# Generate the go struct command: sponge config --server-dir=./serverDir

# app settings
app:
  name: "SnapLink"  # server name
  env: "dev"                           # runtime environment, dev: development environment, prod: production environment, test: test environment
  version: "v0.0.0"
  host: "127.0.0.1"                  # domain or ip, for service registration
  enableHTTPProfile: false        # whether to turn on performance analysis, true:enable, false:disable
  enableStat: true                   # whether to turn on printing statistics, true:enable, false:disable
  enableMetrics: true               # whether to turn on indicator collection, true:enable, false:disable
  enableLimit: false                 # whether to turn on rate limiting (adaptive), true:on, false:off
  enableCircuitBreaker: false    # whether to turn on circuit breaker(adaptive), true:on, false:off
  enableTrace: false                 # whether to turn on trace, true:enable, false:disable, if true jaeger configuration must be set
  tracingSamplingRate: 1.0       # tracing sampling rate, between 0 and 1, 0 means no sampling, 1 means sampling all links
  registryDiscoveryType: ""       # registry and discovery types: consul, etcd, nacos, if empty, registration and discovery are not used
  cacheType: "redis"            # cache type, "memory" or "redis", if set to redis, must set redis configuration
  domain: "localhost:8080
"      #服务域名,此配置不影响访问,只影响前端的展示

# http server settings
http:
  port: 8080            # listen port
  readTimeout: 3     # read timeout, unit(second)
  writeTimeout: 60  # write timeout, unit(second), if enableHTTPProfile is true, it needs to be greater than 60s, the default value for pprof to do profiling is 60s


# logger settings
logger:
  level: "info"             # output log levels debug, info, warn, error, default is debug
  format: "console"     # output format, console or json, default is console
  isSave: false           # false:output to terminal, true:output to file, default is false


# mysql settings
mysql:
  # dsn format,  <user>:<pass>@(127.0.0.1:3306)/<db>?[k=v& ......]
  dsn: "saas:vAm>~,A*Cdo9j#6@^*k3@(localhost:3306)/saas?parseTime=true&loc=Local&charset=utf8,utf8mb4"
  enableLog: true                    # whether to turn on printing of all logs
  maxIdleConns: 3                  # set the maximum number of connections in the idle connection pool
  maxOpenConns: 100            # set the maximum number of open database connections
  connMaxLifetime: 30            # sets the maximum time for which the connection can be reused, in minutes
  #slavesDsn:                          # sets slaves mysql dsn, array type
  #  - "your slave dsn 1"
  #  - "your slave dsn 2"
  #mastersDsn:                        # sets masters mysql dsn, array type, non-required field, if there is only one master, there is no need to set the mastersDsn field, the default dsn field is mysql master.
  #  - "your master dsn"


# redis settings
redis:
  # dsn format, [user]:<pass>@127.0.0.1:6379/[db], the default user is default, redis version 6.0 and above only supports user.
  network: "tcp"        # network type, tcp or unix
  addr: "localhost:6379"  # redis address
  user: "default"
  password: "redis123"
  db: 0                 # redis db
  dialTimeout: 10        # connection timeout, unit(second)
  readTimeout: 2        # read timeout, unit(second)
  writeTimeout: 2       # write timeout, unit(second)

#bfRedis settings
bfRedis:
  network: "tcp"        # network type, tcp or unix
  addr: "localhost:6379"  # redis address
  password: "redis123"  # redis password
  db: 0                 # redis db
  maxRetries: 3         # maximum number of retries
  dialTimeout: 10       # connection timeout, unit(second)
  readTimeout: 2        # read timeout, unit(second)
  writeTimeout: 2       # write timeout, unit(second)
#pfRedis hyperLogLog
pfRedis:
  network: "tcp"        # network type, tcp or unix
  addr: "100.76.246.116:6379"  # redis address
  password: "redis123"  # redis password
  db: 0                 # redis db
  maxRetries: 3         # maximum number of retries
  dialTimeout: 10       # connection timeout, unit(second)
  readTimeout: 2        # read timeout, unit(second)
  writeTimeout: 2       # write timeout, unit(second)


# jaeger settings
jaeger:
  agentHost: "192.168.3.37"
  agentPort: 6831


# consul settings
consul:
  addr: "192.168.3.37:8500"


# etcd settings
etcd:
  addrs: [ "100.76.246.116:2379" ]


# nacos settings, used in service registration discovery
nacosRd:
  ipAddr: "192.168.3.37"
  port: 8848
  namespaceID: "3454d2b5-2455-4d0e-bf6d-e033b086bb4c" # namespace id
rabbitmq:
  addr: "localhost:5672"
  user: "snaplink-watcher"
  password: "snaplink-watcher"
  virtualhost: "snaplink"

# sentinel settings
sentinel:
  sourceType : "nacos" # file or nacos
  # file 需要配置 configs/sentinel.json 文件
  # nacos 需要配置nacos
  nacos:
    ipAddr: "127.0.0.1"    # server address
    port: 8848                      # listening port
    scheme: "http"               # http or grpc
    contextPath: "/nacos"     # path
    namespaceID: "3f68758b-0c2e-487f-ba1f-46b135fbe8ee" # namespace id
    group: "dev"                    # group name: dev, prod, test
    dataID: "Sentinel.json"  # config file id
    format: "json"                 # configuration file type: json,yaml,toml
elasticsearch:
  addresses: ["http://localhost:9200"]
  username: "snaplink-watcher"
  password: "EmxxYNGu7Jg6ExH"
  cloud_id: ""
  api_key: ""
  service_token: ""
  certificate_fingerprint: ""
  retry_on_status: [429, 502, 503, 504]
  disable_retry: false
  max_retries: 3
  compress_request_body: false
  compress_request_body_level: 3
  discover_nodes_on_start: false
  discover_nodes_interval: 1
  enable_metrics: false
  enable_debug_logger: false
  enable_compatibility_mode: false
  disable_meta_header: false